# Generated by Django 5.0.6 on 2024-06-26 10:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('tmdb_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('year', models.DateField()),
                ('description', models.TextField(max_length=1000)),
                ('genre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('propic', models.ImageField(blank=True, default='static\\unknown_user.png', upload_to='users_pics')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('watchlisted', models.ManyToManyField(blank=True, related_name='watchlisted', to='movieapp.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('approved', 'Request has been approved'), ('rejected', 'Request has been rejected'), ('pending', 'Request not yet evaluated')], default='pending', max_length=8)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movieapp.movie')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movieapp.profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='requests',
            field=models.ManyToManyField(blank=True, related_name='requests', through='movieapp.Request', to='movieapp.movie'),
        ),
    ]
